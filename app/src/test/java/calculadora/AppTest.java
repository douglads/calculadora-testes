/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package calculadora;

import calculadora.Divisao.Divisao;
import calculadora.Multiplicacao.Multiplicacao;
import calculadora.Soma.Soma;
import calculadora.Subtracao.Subtracao;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class AppTest {
    Divisao divisao = new Divisao();
    Subtracao subtracao = new Subtracao();
    Multiplicacao multiplicacao = new Multiplicacao();
    Soma soma = new Soma();
    @Test
    public void DividirDoisNumeros() {
        assertEquals(-1, divisao.divisao(1,-1));
        assertEquals(1, divisao.divisao(2, 2));
        assertEquals(0, divisao.divisao(2, 3));
        assertEquals(1, divisao.divisao(2147483647, 2147483647));
    }
    @Test
    public void SubtrairDoisNumeros() {
        assertEquals(2, subtracao.subtracao(1,-1));
        assertEquals(0, subtracao.subtracao(2, 2));
        assertEquals(-1, subtracao.subtracao(2, 3));
        assertEquals(0, subtracao.subtracao(999999999, 999999999));
    }
    @Test
    public void MultiplicarDoisNumeros() {
        assertEquals(0, multiplicacao.multiplicacao(5,0));
        assertEquals(-1, multiplicacao.multiplicacao(1, -1));
        assertEquals(4, multiplicacao.multiplicacao(2, 2));
        /*assertEquals(1999999998, multiplicacao.multiplicacao(999999999, 999999999)); Nesse caso a multiplicação o resultado seria um número gigantesco 1e+18
 * nesse sentido aqui teria de ser criado um tipo de tratamento
 */
    }
    @Test
    public void SomarDoisNumeros() {
        assertEquals(0, multiplicacao.multiplicacao(0,0));
        assertEquals(-1, multiplicacao.multiplicacao(1, -1));
        assertEquals(4, multiplicacao.multiplicacao(2, 2));
        //assertEquals(1999999998, multiplicacao.multiplicacao(999999999, 999999999)); aqui o erro se da porque o valor apresentado é diferente já que estoura o limite do inteiro
    }
}
